###############################################################################
# Note: this is a template YAML which the 08 shell script transforms
#       into a proper YAML. This file is not needed server-side, just from
#       script 08 to create first 2 Pipelines and N targets (currently 4)
# GKE is regional, we chose everything except prod to be in DEV cluster
# and PROD to be in PROD cluster. We want to use this set up to showcase
# Canary behaviour through Edward Thiele idea.
#
# Schema is well documented here:
# https://cloud.google.com/deploy/docs/api/reference/rest/v1/projects.locations.deliveryPipelines
# Tags/Labels/Annotations are documented here:
# https://cloud.google.com/deploy/docs/labels-annotations
###############################################################################

apiVersion: deploy.cloud.google.com/v1
kind: DeliveryPipeline
metadata:
  name: app01
  annotations:
    #ricc: was here # testing an annotation
    about: This is a python sample web frontend built with BuildPacks
  labels:
    lang: python
    CDT_VER: _MY_VERSION_
    ricc_app_id: '01'
description: |
  App01 in Python CDTv _MY_VERSION_
  Delivery pipeline for App01 deploy unit
#  ricc_language: python
serialPipeline:
 stages:
 - targetId: dev
   profiles: [dev]
 - targetId: staging
   profiles: [staging]
 - targetId: canary
   profiles: [canary-sol2]
 - targetId: production
   profiles: [production-sol2]
---
apiVersion: deploy.cloud.google.com/v1
kind: DeliveryPipeline
metadata:
  name: app02
  annotations:
    #ricc: was also here and loves ruby
    about: This is a Ruby sample web frontend built with Docker
  labels:
    lang: ruby
    CDT_VER: _MY_VERSION_
    ricc_app_id: '02'
description: |
    Delivery pipeline for CICD deploy unit App02 (in ruby) which is based on
    CloudDeploy template version: _MY_VERSION_
serialPipeline:
 stages:
 - targetId: dev
   profiles: [dev]
 - targetId: staging
   profiles: [staging]
 - targetId: canary
   profiles: [canary]
 - targetId: production
   profiles: [production]
---
apiVersion: deploy.cloud.google.com/v1
kind: Target
metadata:
 name: dev
description: 01 Development cluster (internal, autopush)
gke:
 cluster: projects/MY_PROJECT_ID/locations/MY_REGION/clusters/cicd-dev
---
apiVersion: deploy.cloud.google.com/v1
kind: Target
metadata:
 name: staging
description: 02 Staging cluster (internal, more testing)
gke:
 cluster: projects/MY_PROJECT_ID/locations/MY_REGION/clusters/cicd-dev
---
apiVersion: deploy.cloud.google.com/v1
kind: Target
metadata:
 name: canary
description: |
  03 canary cluster (external, rather stable).
  Used for Traffic Splitting to bedew 90% of traffic into
  the canary target (and remaining 10% to prod) for some time before
  promoting all traffic to prod.
gke:
 cluster: projects/MY_PROJECT_ID/locations/MY_REGION/clusters/cicd-canary
---
apiVersion: deploy.cloud.google.com/v1
kind: Target
metadata:
 name: production
description:  |
  04 production cluster (external, as stable as it can be).
  Used for Traffic Splitting to bedew 10% of Traffic into
  this canary (while 90% goes to canary) for some time before
  promoting all traffic to prod.
gke:
 cluster: projects/MY_PROJECT_ID/locations/MY_REGION/clusters/cicd-prod
